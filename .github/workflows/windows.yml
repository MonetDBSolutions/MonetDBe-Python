name: Windows Test & Wheels

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  windows_wheel:
    continue-on-error: true
    runs-on: windows-2019
    env:
      branch: Oct2020
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install choco packages
        run: |
          choco install winflexbison git unzip curl
          choco install python --version 3.9.0 --force
          choco install python --version 3.8.5 --force
          choco install python --version 3.7.9 --force
          choco install python --version 3.6.8 --force
      -
        name: Install vcpkg packages
        uses: lukka/run-vcpkg@v3
        with:
          vcpkgArguments: libiconv openssl geos libxml2 pcre pcre2 zlib getopt bzip2 curl
          vcpkgTriplet: x64-windows
          vcpkgGitCommitId: 70f380e802852fc09c929dead9d8b8659d394181
          appendedCacheKey: ${{ hashFiles(env.vcpkgResponseFile) }}
      -
        name: Get monetdb
        run: |
          Set-Location c:\
          curl.exe https://dev.monetdb.org/hg/MonetDB/archive/${{ env.branch }}.zip -O
          unzip.exe ${{ env.branch }}.zip

      -
        name: Compile and install MonetDB
        run: |
          mkdir c:\MonetDB-${{ env.branch }}\build
          Set-Location c:\MonetDB-${{ env.branch }}\build
          dir $Env:VCPKG_ROOT\scripts\buildsystems
          dir $Env:VCPKG_ROOT\scripts\buildsystems\vcpkg.cmake
          cmake -G "Visual Studio 16 2019" `
            -A x64 `
            -DCMAKE_TOOLCHAIN_FILE=D:\a\MonetDBe-Python\MonetDBe-Python\vcpkg\scripts\buildsystems\vcpkg.cmake `
            -DCMAKE_INSTALL_PREFIX=C:\monetdb `
            -DTESTING=OFF `
            -DCMAKE_BUILD_TYPE=Release `
            -DASSERT=OFF `
            -DODBC=false `
            -DPY3INTEGRATION=OFF `
            -DINT128=OFF  ..
          cmake --build . --target ALL_BUILD --parallel 4  --config Release
          cmake --build . --target INSTALL  --config Release
      -
        name: Collect DLLs
        run: |
          Set-Location $GITHUB_WORKSPACE
          Copy-Item C:\monetdb\bin\bat.dll monetdbe\.
          Copy-Item C:\monetdb\bin\mapi.dll monetdbe\.
          Copy-Item C:\monetdb\bin\monetdb5.dll monetdbe\.
          Copy-Item C:\monetdb\bin\monetdbe.dll monetdbe\.
          Copy-Item C:\monetdb\bin\monetdbsql.dll monetdbe\.
          Copy-Item C:\monetdb\bin\stream.dll monetdbe\.
          ls $Env:VCPKG_ROOT\installed\x64-windows\bin\*.dll
          Copy-Item $Env:VCPKG_ROOT\installed\x64-windows\bin\libcrypto-1_1-x64.dll monetdbe\.
          Copy-Item $Env:VCPKG_ROOT\installed\x64-windows\bin\libiconv.dll monetdbe\.
          Copy-Item $Env:VCPKG_ROOT\installed\x64-windows\bin\libxml2.dll monetdbe\.
          Copy-Item $Env:VCPKG_ROOT\installed\x64-windows\bin\pcre.dll monetdbe\.
          Copy-Item $Env:VCPKG_ROOT\installed\x64-windows\bin\zlib1.dll monetdbe\.
          Copy-Item $Env:VCPKG_ROOT\installed\x64-windows\bin\lzma.dll monetdbe\.
          Copy-Item $Env:VCPKG_ROOT\installed\x64-windows\bin\libcharset.dll monetdbe\.
          Copy-Item $Env:VCPKG_ROOT\installed\x64-windows\bin\bz2.dll monetdbe\.
          Copy-Item $Env:VCPKG_ROOT\installed\x64-windows\bin\libcurl.dll monetdbe\.
      -
        name: Upgrade pip and wheel for all pythons
        run: |
          ls c:\
          ls c:\Python36
          ls c:\Python37
          ls c:\Python38
          ls c:\Python39
          & C:\Python37\python.exe -m pip install --upgrade pip wheel
          & C:\Python38\python.exe -m pip install --upgrade pip wheel
          & C:\Python39\python.exe -m pip install --upgrade pip wheel
      -
        name: Build binary python extension
        run: |
          C:\Python37\python.exe setup.py build_ext --include-dirs=C:\monetdb\include --library-dirs=C:\monetdb\lib
          C:\Python38\python.exe setup.py build_ext --include-dirs=C:\monetdb\include --library-dirs=C:\monetdb\lib
          C:\Python39\python.exe setup.py build_ext --include-dirs=C:\monetdb\include --library-dirs=C:\monetdb\lib
      -
        name: Install python libraries
        run: |
          C:\Python37\python.exe -m pip install .[test]
          C:\Python38\python.exe -m pip install .[test]
          C:\Python39\python.exe -m pip install .[test]
# C:\Python38\Scripts\pytest.exe
      -
        name: Make wheel
        run: |
          C:\Python37\python.exe setup.py bdist_wheel
          C:\Python38\python.exe setup.py bdist_wheel
          C:\Python39\python.exe setup.py bdist_wheel
      -
        uses: actions/upload-artifact@v2
        name: Publish Windows binary wheels
        with:
          path: dist/*.whl

      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.MONETDBE_PYPI }}
