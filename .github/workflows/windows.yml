name: Windows wheels

on:
  push:
    branches: [ master ]
    tags: [ "*" ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# the prefix and version numbers for the branches need to be manually copied (for now) from:
# http://monetdb.cwi.nl/testweb/web/status.php
jobs:
  windows-monetdb-build:
    runs-on: windows-2019
    strategy:
      matrix:
        include:
          - MONETDB_BRANCH: default
            MONETDB_WIN_PREFIX: 84804
            MONETDB_WIN_VERSION: 7f61815866cc
    env:
      MSI: MonetDB5-SQL-Installer-x86_64-${{ matrix.MONETDB_WIN_VERSION }}.msi
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install choco packages
        run: choco install --no-progress -y curl
      -
        name: Get monetdb
        run: |
          Set-Location c:\
          curl.exe http://monetdb.cwi.nl/testweb/web/${{ matrix.MONETDB_WIN_PREFIX }}:${{ matrix.MONETDB_WIN_VERSION }}/${{ env.MSI }} -O
      -
        name: Install monetdb
        run: |
          Start-Process msiexec.exe -Wait -ArgumentList '/I C:\${{ env.MSI }} /qn INSTALLLEVEL=1000'
          ls 'C:\Program Files\MonetDB\MonetDB5'
      - uses: actions/upload-artifact@v2
        with:
          name: monetdb-win-${{ matrix.MONETDB_BRANCH }}
          path: 'C:\Program Files\MonetDB\MonetDB5'

  windows-wheel:
    needs: windows-monetdb-build
    runs-on: windows-2019
    strategy:
      matrix:
        python-version: ["3.7"," 3.8", "3.9", "3.10"]
        branch: [ default ]
    env:
      MONETDB_BRANCH: ${{ matrix.branch }}
    steps:
      -
        name: Print monetdbe branch variable to make sure it is set properly
        run: echo $env:MONETDB_BRANCH
      - 
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - 
        uses: actions/download-artifact@v2
        with:
          name: monetdb-win-${{ matrix.branch }}
          path: 'C:\Program Files\MonetDB\MonetDB5'
      -
        name: Collect DLLs
        run: |
          ls 'C:\Program Files\MonetDB\MonetDB5\bin'
          Copy-Item 'C:\Program Files\MonetDB\MonetDB5\bin\*.dll' monetdbe\.
          ls monetdbe
      -
        name: Upgrade pip and wheel for all pythons
        run: python3 -m pip install --upgrade pip wheel dll-diagnostics build
      -
        name: Build binary python extension
        run: python3 setup.py build_ext --include-dirs='C:\Program Files\MonetDB\MonetDB5\include' --library-dirs='C:\Program Files\MonetDB\MonetDB5\lib'
        env:
          MONETDB_BRANCH: ${{ env.MONETDB_BRANCH }}
      -
        name: Install MonetDBe in developer mode
        run: python3 -m pip install -e .[test]
      -
        name: Run DLL diagnostics
        run: |
          dlldiag.exe deps .\monetdbe\_lowlevel.pyd  
      -
        name: Make wheel
        run: python3 setup.py sdist bdist_wheel
      -
        uses: actions/upload-artifact@v2
        name: Publish Windows binary wheels
        with:
          name: monetdbe-win-wheel-${{ matrix.branch }}-${{ matrix.python-version }}
          path: dist/*.whl
      -
        name: Print version info
        run: python3 -c "from monetdbe._cffi.util import print_info; print_info()"
      -  
        name: Run tests
        run: pytest