name: Run test suite and build wheels

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  linux_test:
    runs-on: ubuntu-18.04
    container: monetdb/dev-builds:Oct2020
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install pytest numpy pandas
      -
        name: Install MonetDBe in developer mode
          python3 -m pip install -e .
      -
        name: run tests
        run: py.test -vv


  linux_mypy:
    runs-on: ubuntu-18.04
    container: monetdb/dev-builds:Oct2020
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install mypy numpy pandas
      -
        name: Install MonetDBe in developer mode
          python3 -m pip install -e .
      -
        name: Run mypy static code checks
        run:mypy monetdbe tests


  linux_pycodestyle:
    runs-on: ubuntu-18.04
    container: monetdb/dev-builds:Oct2020
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install pycodestyle numpy pandas
      -
        name: Install MonetDBe in developer mode
          python3 -m pip install -e .
      -
        name: Check the python coding style
        run: pycodestyle monetdbe tests


  linux_wheel:
    runs-on: ubuntu-18.04
    container: gijzelaerr/monetdb:wheel
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: make linux binary wheels
        run: scripts/make_wheel.sh ${{ matrix.python-version }}
      -
        uses: actions/upload-artifact@v2
        name: Publish Linux binary wheels
        with:
          path: dist/*.whl


  windows_wheel:
    runs-on: windows-2019
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Choco install packages
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: install winflexbison git python curl bzip2
      -
        name: Restore artifacts, or run vcpkg, build and cache artifacts
        uses: lukka/run-vcpkg@v3
        with:
          vcpkgArguments: libiconv openssl geos libxml2 pcre pcre2 zlib getopt
          vcpkgTriplet: x64-windows
          vcpkgGitCommitId: f3f329a048eaff759c1992c458f2e12351486bc7
      -
        name: Windows binary wheel
        run: scripts/win_wheel.ps1
      -
        uses: actions/upload-artifact@v2
        name: Publish Windows binary wheels
        with:
          path: dist/*.whl


  osx_wheel:
    runs-on: macos-10.15
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - name: OS X binary wheel
        run: scripts/osx_wheel.sh
      - uses: actions/upload-artifact@v2
        name: Publish OS X binary wheels
        with:
          path: dist/*.whl
