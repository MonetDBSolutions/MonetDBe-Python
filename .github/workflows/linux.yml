name: linux test and wheels

on:
  push:
    branches: [ "*" ]
    tags: [ "*" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    - cron:  '15 1 * * *'

jobs:
  linux-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: [default]
    container: monetdb/dev-builds:${{ matrix.branch }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Install MonetDBe in developer mode
        run: MONETDB_BRANCH=${{ matrix.branch }} python3 -m pip install -e .[test]
      -
        name: Print version info
        run: python3 -c "from monetdbe._cffi.util import print_info; print_info()"
      -
        name: run tests
        run: py.test -vv

  linux-wheel:
    needs: linux-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [" 3.8", "3.9", "3.10", "3.11", "3.12" ]
        branch: [default]
    container: monetdb/dev-builds:${{ matrix.branch }}_manylinux
    env:
      MONETDB_BRANCH: ${{ matrix.branch }}
      MONETDBE_INCLUDE_PATH: '/usr/local/include'
      MONETDBE_LIBRARY_PATH: '/usr/local/lib64'
      LD_LIBRARY_PATH: '/usr/local/lib64'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: make linux binary wheels
        run: MONETDB_BRANCH=${{ matrix.branch }} scripts/make_wheel.sh ${{ matrix.python-version }}
      -
        uses: actions/upload-artifact@v3
        name: Publish Linux binary wheels
        with:
          name: monetdbe-linux-wheel-${{ matrix.branch }}-${{ matrix.python-version }}
          path: dist/*.whl
